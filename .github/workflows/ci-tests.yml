name: CI Tests (minimal)
on:
  push:
  pull_request:
jobs:
  tests:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install pytest
        run: |
          python -m pip install --upgrade pip
          pip install pytest
      - name: Run tests
        run: pytest -q Day3_CICD
      - name: Deployment Step
        run: |
          echo "Deploying Application..."
          mkdir -p deploy
          cp Day3_CICD/app.py deploy/
          echo "Deployment complete!"
      - name: Upload deploy artifact
        uses: actions/upload-artifact@v4
        with:
          name: deploy-${{ github.sha }}
          path: deploy
      - name: Check Slack configured
        id: slack
        env:
          WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
        run: |
          if [ -n "$WEBHOOK" ]; then
            echo "configured=true" >> $GITHUB_OUTPUT
          else
            echo "configured=false" >> $GITHUB_OUTPUT
          fi
      - name: Slack Notification
        if: ${{ steps.slack.outputs.configured == 'true' }}
        uses: rtCamp/action-slack-notify@v2
        env:
          SLACK_WEBHOOK: ${{ secrets.SLACK_WEBHOOK }}
          SLACK_COLOR: ${{ job.status }}

  docker_push_dockerhub:
    runs-on: ubuntu-latest
    needs: docker_build
    if: ${{ secrets.DOCKERHUB_USERNAME != '' && secrets.DOCKERHUB_TOKEN != '' }}
    steps:
      - uses: actions/checkout@v4
      - name: Log in to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      - name: Build and Push (Docker Hub)
        run: |
          docker build -t ${{ secrets.DOCKERHUB_USERNAME }}/sample-app:latest Day4_Docker
          docker push ${{ secrets.DOCKERHUB_USERNAME }}/sample-app:latest

  docker_push_ghcr:
    runs-on: ubuntu-latest
    needs: docker_build
    if: ${{ !secrets.DOCKERHUB_USERNAME }}
    permissions:
      contents: read
      packages: write
    steps:
      - uses: actions/checkout@v4
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and Push (GHCR)
        env:
          IMAGE_NAME: ghcr.io/${{ github.repository_owner }}/sample-app:latest
        run: |
          docker build -t $IMAGE_NAME Day4_Docker
          docker push $IMAGE_NAME
