name: Day 3 CI
on:
  push:
  pull_request:
jobs:
  python_checks:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-python@v5
        with:
          python-version: "3.11"
      - name: Install tools
        run: |
          python -m pip install --upgrade pip
          pip install flake8 pytest
      - name: Lint with flake8
        run: flake8 .
      - name: Run pytest
        run: |
          pytest -q Day3_CI_CD/tests
      - name: Upload test artifacts
        uses: actions/upload-artifact@v4
        with:
          name: test-snapshots
          path: |
            Day3_CI_CD/tests
            Day2_Scripting/*.sh
  bash_shellcheck:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install ShellCheck
        run: |
          sudo apt-get update
          sudo apt-get install -y shellcheck
      - name: Run ShellCheck on scripts
        run: |
          set -e
          if compgen -G "Day2_Scripting/*.sh" > /dev/null; then
            find Day2_Scripting -type f -name "*.sh" -print0 | xargs -0 -r shellcheck -S warning
          else
            echo "No shell scripts found in Day2_Scripting"
          fi
  powershell_lint:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      - name: Install PSScriptAnalyzer
        shell: pwsh
        run: |
          Set-PSRepository PSGallery -InstallationPolicy Trusted
          Install-Module PSScriptAnalyzer -Scope CurrentUser -Force
      - name: Analyze PowerShell scripts
        shell: pwsh
        run: |
          if (Test-Path "Day1_Linux_Git/backup.ps1") {
            Invoke-ScriptAnalyzer -Path "Day1_Linux_Git/backup.ps1" -Recurse -Severity Warning
          } else {
            Write-Output "No PowerShell scripts to analyze"
          }
  notify:
    if: always()
    needs: [python_checks, bash_shellcheck, powershell_lint]
    runs-on: ubuntu-latest
    steps:
      - name: Slack notification
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
          STATUS: ${{ needs.python_checks.result || needs.bash_shellcheck.result || needs.powershell_lint.result }}
        run: |
          if [ -n "$SLACK_WEBHOOK_URL" ]; then
            MSG="CI status: ${STATUS} for ${GITHUB_REPOSITORY}@${GITHUB_REF_NAME}"
            curl -X POST -H "Content-type: application/json" --data "{\"text\":\"${MSG}\"}" "$SLACK_WEBHOOK_URL"
          else
            echo "SLACK_WEBHOOK_URL not set; skipping notification"
          fi